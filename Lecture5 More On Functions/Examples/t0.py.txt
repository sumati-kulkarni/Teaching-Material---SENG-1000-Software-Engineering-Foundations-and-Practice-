# lambda arguments : expression
x = lambda a, b : a * b
print(x(5, 6))

print('.................')

x = lambda a, b, c : a + b + c
print(x(5, 6, 2))

print('.................')
# The power of lambda is better shown when you use them as 
# an anonymous function inside another function.

def f1(n):
  return lambda a : a * n
print(f1(10)(20))
#OR
f2 = f1(10)
print(f2(20))  # WOW

print('.................')
def f11(n):
  return lambda a : a * n

f21 = f11(2)
f22 = f11(3)

print(f21(10)) 
print(f22(10))

print('.................')

# Using `def` (old way).
def old_add(a, b):
    return a + b
	
# Using `lambda` (new way).
new_add = lambda a, b: a + b

if old_add(10, 5) == new_add(10, 5):
	print('Okay')
else:
	print('Not Okay :-) !!!!')